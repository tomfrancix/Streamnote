@model Streamnote.Relational.Models.Item 

<div class="row">
    @{
        if (Model?.Images?[0]?.Bytes == null || Model?.Images?[0]?.ImageContentType == null)
        {
            <img src="" id="backgroundoutput" style="width: 100%; margin-bottom: -45px;"/>
        }
        else
        {
            <img src="data:@Model.Images[0].ImageContentType;base64,@Convert.ToBase64String(Model.Images[0].Bytes)" style="width: 100%; margin-bottom: -45px;margin-top: 90px;" />
        }
    }
    <div class="col-md-12">
        <a onclick="showUploader()" id="imageuploaderbutton">
            <div style="width: 200px; padding: 10px; text-align: center;">
                <span class="glyphicon glyphicon-camera"> </span> Upload Image?
            </div>
        </a>

        <div id="imageuploader">
            <input type="file" name="image" id="imageFileUpload" onchange="loadFile(event)"/>
        </div>
    </div>
</div>
<hr />
<div class="row" >
    <div class="col-md-8 offset-2">

        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        @{
            if (Model != null && Model.Id > 0)
            {
               <input type="hidden" id="modelId" name="id" value="@Model.Id"/>
            }
        }
        
        <div class="form-group" style="padding-top: 15px;">
            <input asp-for="Title" id="itemTitleEditor" class="form-control postInput" placeholder="Title" style="text-align: center; font-size: 1.2em; outline: none; border: none;" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group">
            <div id="editor" style="min-height: 40vh; font-size: 1.2em;">
                
                @if (Model != null)
                {
                    @Html.Raw(Model.Content)
                }   

            </div> 
            <div class="editorInformation">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-2">
                            letters: 
                            <span id="letterCount">0</span>
                        </div>
                        <div class="col-md-2">
                            words: 
                            <span id="wordCount">0</span>
                        </div>
                        <div class="col-md-8">
                            feedback: 
                            <span id="feedback"></span>
                        </div>
                    </div>
                </div>
            </div>
            <input asp-for="Content" type="hidden" class="form-control" id="editorOutput"  placeholder="Compose your post..." rows="20" style="border: none; outline: none; background-color: rgba(0, 0, 0, 0.02);"/>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div> 
        <div class="background-element" style="padding:1px 8px 45px 8px;">
            <div class="form-group">
                <label class="control-label">Begin typing to select a topic.</label> 
                <input type="text" class="form-control background-standard" id="queryTopics" style="display: inline-block;width: 20%; border:1px solid rgba(0,0,0,0.1); background-color: rgba(0, 0, 0, 0.02); padding:3px; margin: 3px;"/> 
               
                <div id="topicSelect">
                    <label>Now select a topic from this list:</label> <br/>
                    <div id="topicSuggestions"></div>
                    <br/> 
                    <label>Selected topics</label> <br/>
                    <input type="text" id="selectedTopics" name="selectedTopics"  style="display: inline-block;width: 70%; border: none; background-color: rgba(0, 0, 0, 0.02) padding:3px; margin: 3px;"//>
                </div>
           
            </div>
            <div class="form-group">
                <label class="control-label">This post should be public </label>   
                @{
                    if (Model != null)
                    {   
                        <input type="checkbox" checked="@Model.IsPublic" id="isPublic" name="isPublic" value="true">
                    }
                    else
                    {   
                        <input type="checkbox" id="isPublic" name="isPublic" value="true">
                    }
                }                                                                                                                                 
                <span} asp-validation-for="IsPublic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" style="float: right;" />
            </div>
        </div>
    </div>
</div>                  
              
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script>
    var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
        ['blockquote', 'code-block'],

        [{ 'header': 1 }, { 'header': 2 }],               // custom button values
        [{ 'list': 'ordered'}, { 'list': 'bullet' }],
        [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
        [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction

        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        [{ 'font': [] }],
        [{ 'align': [] }]
    ];

    var quill = new Quill('#editor', {
        modules: {
            toolbar: toolbarOptions
        },
        theme: 'snow',
        placeholder: 'Compose an epic...'
    });
    

   
</script>